{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfcopyblobtsk"
		},
		"AZ_ HDInsight_Auto_ListInputFiles_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_ HDInsight_Auto_ListInputFiles_LS'"
		},
		"AZ_CosmosDB_RasberryPi_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_CosmosDB_RasberryPi_LS'"
		},
		"AZ_Dest_Blob2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_Dest_Blob2'"
		},
		"AZ_Destination_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_Destination_LS'"
		},
		"AZ_HDInsightBlob_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_HDInsightBlob_LS'"
		},
		"AZ_HDInsight_Auto_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AZ_HDInsight_Auto_LS'"
		},
		"AZ_HDInsight_Auto_Storage_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_HDInsight_Auto_Storage_LS'"
		},
		"AZ_HDInsight_Auto_readInputFileContent_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_HDInsight_Auto_readInputFileContent_LS'"
		},
		"AZ_HDInsight_Inputs_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_HDInsight_Inputs_LS'"
		},
		"AZ_HDInsight_LS_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'AZ_HDInsight_LS'"
		},
		"AZ_HDInsight_LS_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'AZ_HDInsight_LS'"
		},
		"AZ_HDInsight_LS_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AZ_HDInsight_LS'"
		},
		"AZ_HDInsight_New_LS_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'AZ_HDInsight_New_LS'"
		},
		"AZ_HDInsight_New_LS_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'AZ_HDInsight_New_LS'"
		},
		"AZ_HDInsight_New_LS_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AZ_HDInsight_New_LS'"
		},
		"AZ_SRC_Sales_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_SRC_Sales_LS'"
		},
		"AZ_Source_Blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_Source_Blob'"
		},
		"AZ_Source_Blob_Dynamic_Params_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZ_Source_Blob_Dynamic_Params_LS'"
		},
		"Az_SQL_DB_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Az_SQL_DB_LS'"
		},
		"DestSalesAndSalesCateogyLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DestSalesAndSalesCateogyLS'"
		},
		"SourceRasbeeryPiJsonData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SourceRasbeeryPiJsonData'"
		},
		"AZ_HDInsight_Auto_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "shravan238"
		},
		"AZ_HDInsight_LS_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "59fb1009-8a12-4f1c-8b5c-6dd026d33ccf"
		},
		"AZ_HDInsight_LS_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "DF_COPY_BLOB_RG"
		},
		"AZ_HDInsight_LS_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "0cf3ac68-a439-476f-bc17-81b806a7cda7"
		},
		"AZ_HDInsight_LS_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "c934857e-30bb-4044-9f1a-ff36d2cc99c5"
		},
		"AZ_HDInsight_New_LS_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "59fb1009-8a12-4f1c-8b5c-6dd026d33ccf"
		},
		"AZ_HDInsight_New_LS_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "DF_COPY_BLOB_RG"
		},
		"AZ_HDInsight_New_LS_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "0cf3ac68-a439-476f-bc17-81b806a7cda7"
		},
		"AZ_HDInsight_New_LS_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "c934857e-30bb-4044-9f1a-ff36d2cc99c5"
		},
		"AZ_HDInsight_New_LS_properties_typeProperties_clusterUserName": {
			"type": "string",
			"defaultValue": "shravan238c"
		},
		"AZ_HDInsight_New_LS_properties_typeProperties_clusterSshUserName": {
			"type": "string",
			"defaultValue": "shravan238"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/59fb1009-8a12-4f1c-8b5c-6dd026d33ccf/resourceGroups/iothub/providers/Microsoft.Storage/storageAccounts/iothubstorageaccounttsk"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Execute_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Input to Dynamic copy data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AZ_Load_Dynamic_Files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"containername": "",
								"filename": "SalesCategory.csv",
								"tableschema": "",
								"tablename": "SalesCategory"
							}
						}
					}
				],
				"folder": {
					"name": "Sales"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AZ_Load_Dynamic_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List All Files From Input files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AZ_ListAllFiles_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemType",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter file name",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "List All Files From Input files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List All Files From Input files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Iterating Multiple Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter file name').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Read File Content",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "AZ_ReadSingleFileContent_DS",
											"type": "DatasetReference",
											"parameters": {
												"dynamicfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set Input File Location",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Read File Content",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "inputfilelocation",
										"value": {
											"value": "@activity('Read File Content').output.value[0].inputfilelocation",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Output File Location",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Read File Content",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "outputfilelocation",
										"value": {
											"value": "@activity('Read File Content').output.value[0].outputFilelocation",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Process Web Analytics",
									"type": "HDInsightHive",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"scriptPath": "hivedatastore/scripts/partitionweblogs.hql",
										"defines": {
											"inputfilelocation": {
												"value": "@variables('inputfilelocation')",
												"type": "Expression"
											},
											"outputfilelication": {
												"value": "@variables('outputfilelocation')",
												"type": "Expression"
											}
										},
										"scriptLinkedService": {
											"referenceName": "AZ_HDInsight_Auto_Storage_LS",
											"type": "LinkedServiceReference"
										}
									},
									"linkedServiceName": {
										"referenceName": "AZ_HDInsight_Auto_LS",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Invoking spark",
									"type": "HDInsightSpark",
									"dependsOn": [
										{
											"activity": "Set Input File Location",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Output File Location",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"rootPath": "hivedatastore/scripts",
										"entryFilePath": "webloganalysis.ipynb",
										"sparkJobLinkedService": {
											"referenceName": "AZ_HDInsight_Auto_Storage_LS",
											"type": "LinkedServiceReference"
										}
									},
									"linkedServiceName": {
										"referenceName": "AZ_HDInsight_Auto_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"inputfilelocation": {
						"type": "String"
					},
					"outputfilelocation": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HDInsight_Hive_Integration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_ListAllFiles_DS')]",
				"[concat(variables('factoryId'), '/datasets/AZ_ReadSingleFileContent_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Auto_Storage_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Auto_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_pipeline_spark')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List All Files From Input files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AZ_ListAllFiles_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemType",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter file name",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "List All Files From Input files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List All Files From Input files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Iterating Multiple Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter file name').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Read File Content",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "AZ_ReadSingleFileContent_DS",
											"type": "DatasetReference",
											"parameters": {
												"dynamicfilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set Input File Location",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Read File Content",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "inputfilelocation",
										"value": {
											"value": "@activity('Read File Content').output.value[0].inputFilelocation",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Output File Location",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Read File Content",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "outputfilelocation",
										"value": {
											"value": "@activity('Read File Content').output.value[0].outputfilelocation",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Invoking spark",
									"type": "HDInsightSpark",
									"dependsOn": [
										{
											"activity": "Set Input File Location",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Output File Location",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"rootPath": "spark/Scripts",
										"entryFilePath": "WordCount_Spark.py",
										"sparkConfig": {
											"inputfilelocation": {
												"value": "@variables('inputfilelocation')",
												"type": "Expression"
											},
											"outputfilelocation": {
												"value": "@variables('outputfilelocation')",
												"type": "Expression"
											}
										},
										"sparkJobLinkedService": {
											"referenceName": "AZ_HDInsight_Auto_Storage_LS",
											"type": "LinkedServiceReference"
										}
									},
									"linkedServiceName": {
										"referenceName": "AZ_HDInsight_Auto_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"inputfilelocation": {
						"type": "String"
					},
					"outputfilelocation": {
						"type": "String"
					}
				},
				"folder": {
					"name": "HDInsight_Hive_Integration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_ListAllFiles_DS')]",
				"[concat(variables('factoryId'), '/datasets/AZ_ReadSingleFileContent_DS')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Auto_Storage_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Auto_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_LoadRasberryPiData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IOTJsonDataToCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RasberryPiJsonData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbSqlApiCollectionRasberryPi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "IOT-Analytics"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RasberryPiJsonData')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollectionRasberryPi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Load_Dynamic_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dynamically Parameterization Blob To Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "truncate table [@{pipeline().parameters.tableschema}].[@{pipeline().parameters.tablename}]",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AZ_Source_Blob_Dynamic_Params_DS",
								"type": "DatasetReference",
								"parameters": {
									"containername": {
										"value": "@pipeline().parameters.containername",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AZ_Destination_Dynamic_Params_DS",
								"type": "DatasetReference",
								"parameters": {
									"tableschema": {
										"value": "@pipeline().parameters.tableschema",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"containername": {
						"type": "string",
						"defaultValue": "movies"
					},
					"filename": {
						"type": "string",
						"defaultValue": "Sales.csv"
					},
					"tableschema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "Product"
					}
				},
				"folder": {
					"name": "Sales"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_Source_Blob_Dynamic_Params_DS')]",
				"[concat(variables('factoryId'), '/datasets/AZ_Destination_Dynamic_Params_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select filepath from dbo.files",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AZ_SQL_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-19T02:42:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_ProcessingBlobs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessingBlobs",
						"type": "HDInsightHive",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "hdinsight/partitionweblogs.hql",
							"defines": {
								"inputfilepath": "wasbs://HDInsight@iothubstorageaccounttsk.blob.core.windows.net/inputdata/weblogs.log",
								"partitionedtable": "wasbs://HDInsight@iothubstorageaccounttsk.blob.core.windows.net/outputdata/"
							},
							"scriptLinkedService": {
								"referenceName": "AZ_HDInsight_Inputs_LS",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "AZ_HDInsight_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "HDInsight_Hive_Processing"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Inputs_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Source_Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_lvn",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "sales//dbo.Product.txt"
							},
							{
								"name": "Destination",
								"value": "movies//sales"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_lvn",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_lvn",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-18T02:46:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lvn')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lvn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDBTablesToBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Table List from database",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT QUOTENAME(table_Schema)+'.'+QUOTENAME(TABLE_NAME) AS Table_Name \n   FROM information_Schema.tables\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AZ_SQL_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TableSelectedWithdbo",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Table List from database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Table List from database').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith( item().Table_Name,'[dbo]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IterateDBTablesToBlobStorage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "TableSelectedWithdbo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('TableSelectedWithdbo').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IterateIndDBTablesToBlobStorage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().Table_Name}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AZ_SQL_DB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_lvn",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "IterateIndDBTablesToBlobStorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains( item().Table_Name,'Files')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "MoveToArchiveContainer",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DestinationDataset_lvn",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SourceDataset_lvn",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "DeleteFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DestinationDataset_lvn",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-19T02:56:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_DB')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lvn')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lvn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDBTablesToBlobStorage_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Table List from database",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT QUOTENAME(table_Schema)+'.'+QUOTENAME(TABLE_NAME) AS Table_Name \n   FROM information_Schema.tables\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AZ_SQL_DB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TableSelectedWithdbo",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Table List from database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Table List from database').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith( item().Table_Name,'[dbo]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IterateDBTablesToBlobStorage",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "TableSelectedWithdbo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('TableSelectedWithdbo').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "IterateIndDBTablesToBlobStorage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().Table_Name}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AZ_SQL_DB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_lvn",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "IterateIndDBTablesToBlobStorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains( item().Table_Name,'Files')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "MoveToArchiveContainer",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DestinationDataset_lvn",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SourceDataset_lvn",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "DeleteFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DestinationDataset_lvn",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-19T03:02:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_SQL_DB')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lvn')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lvn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicContentPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceFile",
								"type": "DatasetReference",
								"parameters": {
									"inputfile": "SalesCategory.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SourceFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceFile')]",
				"[concat(variables('factoryId'), '/datasets/SourceFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JoinSalesDataFiles",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "JoinSalesDataFiles",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceSalesDataFile": {},
									"SourceSalesCategoryDataFile": {},
									"DestJoinSalesAndSalesCategory": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "DataFlow-Join"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/JoinSalesDataFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getmetadatapipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SourceFile",
								"type": "DatasetReference",
								"parameters": {
									"inputfile": "SalesCategory.csv"
								}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"exists",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "SP_GetFileMetadata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[STORE_FILEMETADATA]",
							"storedProcedureParameters": {
								"FileName": {
									"value": {
										"value": "@activity('Get Metadata').output.itemName",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('Get Metadata').output.lastModified",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RecInsertDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Az_SQL_DB_LS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceFile')]",
				"[concat(variables('factoryId'), '/linkedServices/Az_SQL_DB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getmetadatapipeline_iterate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SourceFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"exists",
								"lastModified",
								"childItems",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter_dbo",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith( item().name ,'[dbo]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_dbo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_dbo').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SP_Save",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[STORE_FILEMETADATA]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"LastModifiedDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"RecInsertDate": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Az_SQL_DB_LS",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceFiles')]",
				"[concat(variables('factoryId'), '/linkedServices/Az_SQL_DB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/processmoviesdata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AverageComedyRating_1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AverageComedyRating",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblob": {},
									"destinationblobstorage": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "DataFlow-Aggregation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AverageComedyRating')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Destination_Dynamic_Params_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Destination_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableschema": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sales"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().tableschema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Destination_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_ListAllFiles_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_ HDInsight_Auto_ListInputFiles_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HDInsight_Hive_Integration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "InputFilePath",
						"container": "spark"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_ HDInsight_Auto_ListInputFiles_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_ReadSingleFileContent_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_HDInsight_Auto_readInputFileContent_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dynamicfilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "HDInsight_Hive_Integration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().dynamicfilename",
							"type": "Expression"
						},
						"folderPath": "InputFilePath",
						"container": "spark"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Auto_readInputFileContent_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SQL_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Az_SQL_DB_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Az_SQL_DB_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SRC_SalesCategory_File_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_SRC_Sales_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Join"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesCategory.csv",
						"container": "sales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_SRC_Sales_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SRC_Sales_File_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_SRC_Sales_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Join"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.Product.txt",
						"container": "sales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_SRC_Sales_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Source_Blob_Dynamic_Params_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Source_Blob_Dynamic_Params_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sales"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Source_Blob_Dynamic_Params_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollectionRasberryPi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_CosmosDB_RasberryPi_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "DeviceData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_CosmosDB_RasberryPi_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lvn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Dest_Blob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{item().Table_Name}",
							"type": "Expression"
						},
						"container": "movies"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Dest_Blob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationJoinSalesDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DestSalesAndSalesCateogyLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "movies"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DestSalesAndSalesCateogyLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RasberryPiJsonData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceRasbeeryPiJsonData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "RasberryPiData.json",
						"container": "temperature"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"messageId": {
							"type": "integer"
						},
						"deviceId": {
							"type": "string"
						},
						"temperature": {
							"type": "number"
						},
						"humidity": {
							"type": "number"
						},
						"EventProcessedUtcTime": {
							"type": "string"
						},
						"PartitionId": {
							"type": "integer"
						},
						"EventEnqueuedUtcTime": {
							"type": "string"
						},
						"IoTHub": {
							"type": "object",
							"properties": {
								"MessageId": {
									"type": "null"
								},
								"CorrelationId": {
									"type": "null"
								},
								"ConnectionDeviceId": {
									"type": "string"
								},
								"ConnectionDeviceGenerationId": {
									"type": "string"
								},
								"EnqueuedTime": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceRasbeeryPiJsonData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lvn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{item().Table_Name}",
							"type": "Expression"
						},
						"container": {
							"value": "sales",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ProductNumber",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "ProductCategoryID",
						"type": "String"
					},
					{
						"name": "ProductModelID",
						"type": "String"
					},
					{
						"name": "SellStartDate",
						"type": "String"
					},
					{
						"name": "SellEndDate",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"inputfile": {
						"type": "string",
						"defaultValue": "SalesCategory.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().inputfile",
							"type": "Expression"
						},
						"container": "sales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/newsalesds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZ_Source_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB.csv",
						"container": "newsales"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_Source_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_ HDInsight_Auto_ListInputFiles_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_ HDInsight_Auto_ListInputFiles_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_CosmosDB_RasberryPi_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('AZ_CosmosDB_RasberryPi_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Dest_Blob2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_Dest_Blob2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Destination_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AZ_Destination_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsightBlob_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_HDInsightBlob_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_Auto_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://sparkshravan.azurehdinsight.net",
					"userName": "[parameters('AZ_HDInsight_Auto_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_Auto_LS_password')]"
					},
					"isEspEnabled": false,
					"linkedServiceName": {
						"referenceName": "AZ_HDInsight_Auto_Storage_LS",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Auto_Storage_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_Auto_Storage_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_HDInsight_Auto_Storage_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_Auto_readInputFileContent_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_HDInsight_Auto_readInputFileContent_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_Inputs_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_HDInsight_Inputs_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "hadoop",
					"clusterSize": 4,
					"timeToLive": "00:15:00",
					"version": "3.6",
					"hostSubscriptionId": "[parameters('AZ_HDInsight_LS_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('AZ_HDInsight_LS_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('AZ_HDInsight_LS_properties_typeProperties_servicePrincipalId')]",
					"tenant": "[parameters('AZ_HDInsight_LS_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_LS_clusterPassword')]"
					},
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_LS_clusterSshPassword')]"
					},
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_LS_servicePrincipalKey')]"
					},
					"additionalLinkedServiceNames": [
						{
							"referenceName": "AZ_HDInsightBlob_LS",
							"type": "LinkedServiceReference"
						}
					],
					"linkedServiceName": {
						"referenceName": "AZ_HDInsightBlob_LS",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": "",
					"subnetName": "",
					"virtualNetworkId": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsightBlob_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_HDInsight_New_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "hadoop",
					"clusterSize": 1,
					"timeToLive": "00:15:00",
					"version": "3.6",
					"hostSubscriptionId": "[parameters('AZ_HDInsight_New_LS_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('AZ_HDInsight_New_LS_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('AZ_HDInsight_New_LS_properties_typeProperties_servicePrincipalId')]",
					"osType": "Linux",
					"tenant": "[parameters('AZ_HDInsight_New_LS_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "",
					"clusterUserName": "[parameters('AZ_HDInsight_New_LS_properties_typeProperties_clusterUserName')]",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_New_LS_clusterPassword')]"
					},
					"clusterSshUserName": "[parameters('AZ_HDInsight_New_LS_properties_typeProperties_clusterSshUserName')]",
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_New_LS_clusterSshPassword')]"
					},
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AZ_HDInsight_New_LS_servicePrincipalKey')]"
					},
					"additionalLinkedServiceNames": [
						{
							"referenceName": "AZ_HDInsight_Inputs_LS",
							"type": "LinkedServiceReference"
						}
					],
					"linkedServiceName": {
						"referenceName": "AZ_HDInsightBlob_LS",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": "",
					"subnetName": "",
					"virtualNetworkId": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsight_Inputs_LS')]",
				"[concat(variables('factoryId'), '/linkedServices/AZ_HDInsightBlob_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_SRC_Sales_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_SRC_Sales_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Source_Blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_Source_Blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_Source_Blob_Dynamic_Params_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZ_Source_Blob_Dynamic_Params_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Az_SQL_DB_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Az_SQL_DB_LS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestSalesAndSalesCateogyLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DestSalesAndSalesCateogyLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceRasbeeryPiJsonData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SourceRasbeeryPiJsonData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AZ_LoadRasberryPiData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/temperature/blobs/0_",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AZ_LoadRasberryPiData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AverageComedyRating')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "newsalesds",
								"type": "DatasetReference"
							},
							"name": "sourceblob"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SourceFiles",
								"type": "DatasetReference"
							},
							"name": "destinationblobstorage"
						}
					],
					"transformations": [
						{
							"name": "MoviesDBFilter"
						},
						{
							"name": "AverageComedyRating"
						}
					],
					"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sourceblob\nsourceblob filter(toInteger(year) >=1910 && toInteger(year) <=2000 && rlike( genres, 'Comedy')) ~> MoviesDBFilter\nMoviesDBFilter aggregate(groupBy(year),\n\tRating = avg(toInteger(Rating))) ~> AverageComedyRating\nAverageComedyRating sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['AvgMovieRating.txt'],\n\tpartitionBy('hash', 1),\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'MM-dd-yyyy HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> destinationblobstorage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/newsalesds')]",
				"[concat(variables('factoryId'), '/datasets/SourceFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinSalesDataFiles')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AZ_SRC_Sales_File_DS",
								"type": "DatasetReference"
							},
							"name": "SourceSalesDataFile"
						},
						{
							"dataset": {
								"referenceName": "AZ_SRC_SalesCategory_File_DS",
								"type": "DatasetReference"
							},
							"name": "SourceSalesCategoryDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationJoinSalesDS",
								"type": "DatasetReference"
							},
							"name": "DestJoinSalesAndSalesCategory"
						}
					],
					"transformations": [
						{
							"name": "JoinSalesFiles"
						}
					],
					"script": "source(output(\n\t\tProductID as short,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as double,\n\t\tListPrice as double,\n\t\tSize as string,\n\t\tWeight as string,\n\t\tProductCategoryID as short,\n\t\tProductModelID as short,\n\t\tSellStartDate as string,\n\t\tSellEndDate as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceSalesDataFile\nsource(output(\n\t\tProductCategoryID as short,\n\t\tParentProductCategoryID as short,\n\t\tName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceSalesCategoryDataFile\nSourceSalesDataFile, SourceSalesCategoryDataFile join(SourceSalesDataFile@ProductCategoryID == SourceSalesCategoryDataFile@ProductCategoryID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSalesFiles\nJoinSalesFiles sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SalesAndSalesCategory.csv'],\n\tmapColumn(\n\t\tProductID,\n\t\tName = SourceSalesDataFile@Name,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID = SourceSalesDataFile@ProductCategoryID,\n\t\tProductModelID,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tModifiedDate,\n\t\tParentProductCategoryID,\n\t\tName = SourceSalesCategoryDataFile@Name\n\t),\n\tpartitionBy('hash', 1),\n\tdateFormat:'yyyy.MM.dd',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DestJoinSalesAndSalesCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AZ_SRC_Sales_File_DS')]",
				"[concat(variables('factoryId'), '/datasets/AZ_SRC_SalesCategory_File_DS')]",
				"[concat(variables('factoryId'), '/datasets/DestinationJoinSalesDS')]"
			]
		}
	]
}